{"version":3,"sources":["api/proto/api_grpc_web_pb.js","api/api.ts","pages/login.tsx","api/login.ts","pages/home.tsx","App.tsx","index.tsx","api/proto/api_pb.js"],"names":["grpc","web","require","proto","api","ApiClient","hostname","credentials","options","format","this","client_","GrpcWebClientBase","hostname_","ApiPromiseClient","methodDescriptor_Api_Login","MethodDescriptor","MethodType","UNARY","LoginRequest","LoginReply","request","serializeBinary","deserializeBinary","prototype","login","metadata","callback","rpcCall","unaryCall","methodDescriptor_Api_StreamNews","SERVER_STREAMING","RepeatNewsRequest","NewsReply","streamNews","serverStreaming","module","exports","Login","_React$useState","React","useState","email","password","_React$useState2","Object","slicedToArray","state","setState","react_default","a","createElement","onSubmit","event","preventDefault","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","post","sent","console","log","status","stop","type","value","onChange","target","placeholder","Home","App","react_router_dom","react_router","path","element","login_Login","home_Home","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","jspb","goog","global","Function","exportSymbol","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","loginToken","getFieldWithDefault","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","setLoginToken","skipField","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","getLoginToken","length","writeString","setProto3StringField","token","count","setToken","readInt32","setCount","undefined","getToken","getCount","writeInt32","setProto3IntField","setStatus","getStatus","id","setId","setMessage","getId","getMessage","object","extend"],"mappings":"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","file":"static/js/main.36da9d8f.chunk.js","sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for api\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.api = require('./api_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.api.ApiClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.api.ApiPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.api.LoginRequest,\n *   !proto.api.LoginReply>}\n */\nconst methodDescriptor_Api_Login = new grpc.web.MethodDescriptor(\n  '/api.Api/Login',\n  grpc.web.MethodType.UNARY,\n  proto.api.LoginRequest,\n  proto.api.LoginReply,\n  /**\n   * @param {!proto.api.LoginRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.api.LoginReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.api.LoginRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.api.LoginReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.api.LoginReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.api.ApiClient.prototype.login =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/api.Api/Login',\n      request,\n      metadata || {},\n      methodDescriptor_Api_Login,\n      callback);\n};\n\n\n/**\n * @param {!proto.api.LoginRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.api.LoginReply>}\n *     Promise that resolves to the response\n */\nproto.api.ApiPromiseClient.prototype.login =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/api.Api/Login',\n      request,\n      metadata || {},\n      methodDescriptor_Api_Login);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.api.RepeatNewsRequest,\n *   !proto.api.NewsReply>}\n */\nconst methodDescriptor_Api_StreamNews = new grpc.web.MethodDescriptor(\n  '/api.Api/StreamNews',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.api.RepeatNewsRequest,\n  proto.api.NewsReply,\n  /**\n   * @param {!proto.api.RepeatNewsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.api.NewsReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.api.RepeatNewsRequest} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.api.NewsReply>}\n *     The XHR Node Readable Stream\n */\nproto.api.ApiClient.prototype.streamNews =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/api.Api/StreamNews',\n      request,\n      metadata || {},\n      methodDescriptor_Api_StreamNews);\n};\n\n\n/**\n * @param {!proto.api.RepeatNewsRequest} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.api.NewsReply>}\n *     The XHR Node Readable Stream\n */\nproto.api.ApiPromiseClient.prototype.streamNews =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/api.Api/StreamNews',\n      request,\n      metadata || {},\n      methodDescriptor_Api_StreamNews);\n};\n\n\nmodule.exports = proto.api;\n\n","import { ApiClient } from './proto/api_grpc_web_pb';\n\nexport default new ApiClient(`localhost:50051`, null, null);\n","import React from 'react';\nimport { login } from '../api/login';\n\nexport const Login = () => {\n\tconst [state, setState] = React.useState({email: '', password: ''});\n\n\tconst onEmailChange = (event: any) => {\n\t\tsetState({email: event.target.value, password: state.password});\n\t}\n\n\tconst onPasswordChange = (event: any) => {\n\t\tsetState({email: state.email, password: event.target.value});\n\t}\n\n        const onLoginSubmit = (event: any) => {\n\t\tevent.preventDefault();\n\t\tlogin(state.email, state.password);\n\t\t\n\t}\n\n\treturn (\n\t\t<form onSubmit={onLoginSubmit}>\n\t\t\t<h1>Login</h1>\n\t\t\t<label>Email</label>\n\t\t\t<input \n\t\t\t\ttype=\"email\"\n\t\t\t\tvalue={state.email}\n\t\t\t\tonChange={onEmailChange}\n\t\t\t\tplaceholder=\"Enter email address\"\n\t\t\t/>\n\t\t\t<br />\n\t\t\t<label>Password</label>\n\t\t\t<input\n\t\t\t\ttype=\"password\"\n\t\t\t\tvalue={state.password}\n\t\t\t\tonChange={onPasswordChange}\n\t\t\t\tplaceholder=\"Enter password\"\n\t\t\t/>\n\t\t\t<br />\n\t\t\t<input type=\"submit\" value=\"submit\" />\n\t\t</form>\n\t);\n}\n\n","import api from './api';\nimport axios from 'axios';\n\nimport { LoginRequest, LoginReply } from './proto/api_pb';\n\nexport function login(email: string, password: string) {\n\t(async () => {\n\t\tlet response = await axios.post('/login', {email, password});\t\n\t\tconsole.log(response.status);\n\t})();\n}\n\nfunction loginGrpc(loginToken: string): Promise<LoginReply> {\n\tlet loginRequest = new LoginRequest();\n\tloginRequest.setLoginToken(loginToken);\n\treturn new Promise<LoginReply> ( (resolve, reject) => {\n\t\tapi.login(loginRequest, undefined, (err, loginReply) => {\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\n\t\t\treturn resolve(loginReply);\n\t\t});\n\t});\n};\n","import React from 'react';\n\nexport const Home = () => {\n\treturn (<div>Home</div>);\n}\n\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { Login } from './pages/login';\nimport { Home } from './pages/home';\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/\" element={<Login />} />\n                                <Route path=\"/home\" element={<Home />} />\n\t\t\t</Routes>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n","// source: api.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.api.LoginReply', null, global);\ngoog.exportSymbol('proto.api.LoginRequest', null, global);\ngoog.exportSymbol('proto.api.NewsReply', null, global);\ngoog.exportSymbol('proto.api.RepeatNewsRequest', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.api.LoginRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.api.LoginRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.api.LoginRequest.displayName = 'proto.api.LoginRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.api.RepeatNewsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.api.RepeatNewsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.api.RepeatNewsRequest.displayName = 'proto.api.RepeatNewsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.api.LoginReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.api.LoginReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.api.LoginReply.displayName = 'proto.api.LoginReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.api.NewsReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.api.NewsReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.api.NewsReply.displayName = 'proto.api.NewsReply';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.api.LoginRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.api.LoginRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.api.LoginRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.LoginRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    loginToken: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.api.LoginRequest}\n */\nproto.api.LoginRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.api.LoginRequest;\n  return proto.api.LoginRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.api.LoginRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.api.LoginRequest}\n */\nproto.api.LoginRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLoginToken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.api.LoginRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.api.LoginRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.api.LoginRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.LoginRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLoginToken();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string login_token = 1;\n * @return {string}\n */\nproto.api.LoginRequest.prototype.getLoginToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.LoginRequest} returns this\n */\nproto.api.LoginRequest.prototype.setLoginToken = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.api.RepeatNewsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.api.RepeatNewsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.api.RepeatNewsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.RepeatNewsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    token: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    count: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.api.RepeatNewsRequest}\n */\nproto.api.RepeatNewsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.api.RepeatNewsRequest;\n  return proto.api.RepeatNewsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.api.RepeatNewsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.api.RepeatNewsRequest}\n */\nproto.api.RepeatNewsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setToken(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.api.RepeatNewsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.api.RepeatNewsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.api.RepeatNewsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.RepeatNewsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getToken();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCount();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string token = 1;\n * @return {string}\n */\nproto.api.RepeatNewsRequest.prototype.getToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.RepeatNewsRequest} returns this\n */\nproto.api.RepeatNewsRequest.prototype.setToken = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int32 count = 2;\n * @return {number}\n */\nproto.api.RepeatNewsRequest.prototype.getCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.api.RepeatNewsRequest} returns this\n */\nproto.api.RepeatNewsRequest.prototype.setCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.api.LoginReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.api.LoginReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.api.LoginReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.LoginReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    token: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.api.LoginReply}\n */\nproto.api.LoginReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.api.LoginReply;\n  return proto.api.LoginReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.api.LoginReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.api.LoginReply}\n */\nproto.api.LoginReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setToken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.api.LoginReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.api.LoginReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.api.LoginReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.LoginReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getToken();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 status = 1;\n * @return {number}\n */\nproto.api.LoginReply.prototype.getStatus = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.api.LoginReply} returns this\n */\nproto.api.LoginReply.prototype.setStatus = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string token = 2;\n * @return {string}\n */\nproto.api.LoginReply.prototype.getToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.LoginReply} returns this\n */\nproto.api.LoginReply.prototype.setToken = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.api.NewsReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.api.NewsReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.api.NewsReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.NewsReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.api.NewsReply}\n */\nproto.api.NewsReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.api.NewsReply;\n  return proto.api.NewsReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.api.NewsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.api.NewsReply}\n */\nproto.api.NewsReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.api.NewsReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.api.NewsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.api.NewsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.NewsReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.api.NewsReply.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.api.NewsReply} returns this\n */\nproto.api.NewsReply.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.api.NewsReply.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.NewsReply} returns this\n */\nproto.api.NewsReply.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto.api);\n"],"sourceRoot":""}